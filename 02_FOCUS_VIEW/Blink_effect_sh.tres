[gd_resource type="VisualShader" load_steps=15 format=3 uid="uid://clx3d2k1ngnqc"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_nf8k7"]
parameter_name = "Dither_blue_noise_size"
qualifier = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_huvip"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_oalpc"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_he5yq"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_l2mr6"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_yh7tq"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_1uqbr"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_u4ysl"]
parameter_name = "Opacity"
hint = 1
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ihr8a"]
source = 5

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_8snm8"]
function = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_umtei"]
default_input_values = [1, Vector2(1, 0.5), 2, Vector2(0, 0)]
function = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_xiyl7"]
default_input_values = [0, 0.0, 1, 0.001]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_1of8i"]
default_input_values = [0, 0.0, 1, 0.1]
operator = 2

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_0k162"]
parameter_name = "BlueNoise"
qualifier = 1
texture_repeat = 1

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float Opacity : hint_range(0, 1) = 0.5;



void fragment() {
	vec4 n_out12p0;
// Texture2D:12
	n_out12p0 = texture(TEXTURE, UV);
	float n_out12p4 = n_out12p0.a;


// FloatParameter:3
	float n_out3p0 = Opacity;


// Mix:13
	float n_in13p0 = 0.00000;
	float n_out13p0 = mix(n_in13p0, n_out3p0, n_out12p4);


// Output:0
	COLOR.rgb = vec3(n_out12p0.xyz);
	COLOR.a = n_out13p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(520, 120)
nodes/fragment/2/node = SubResource("VisualShaderNodeStep_1uqbr")
nodes/fragment/2/position = Vector2(-300, 260)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatParameter_u4ysl")
nodes/fragment/3/position = Vector2(-1280, 400)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_ihr8a")
nodes/fragment/4/position = Vector2(-1100, -400)
nodes/fragment/5/node = SubResource("VisualShaderNodeUVFunc_8snm8")
nodes/fragment/5/position = Vector2(-1700, -280)
nodes/fragment/6/node = SubResource("VisualShaderNodeUVFunc_umtei")
nodes/fragment/6/position = Vector2(-2020, -400)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatOp_xiyl7")
nodes/fragment/7/position = Vector2(-1980, -40)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatOp_1of8i")
nodes/fragment/8/position = Vector2(-1920, 160)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture2DParameter_0k162")
nodes/fragment/9/position = Vector2(-1460, -120)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatParameter_nf8k7")
nodes/fragment/10/position = Vector2(-2420, -260)
nodes/fragment/11/node = SubResource("VisualShaderNodeInput_huvip")
nodes/fragment/11/position = Vector2(-640, -460)
nodes/fragment/12/node = SubResource("VisualShaderNodeTexture_oalpc")
nodes/fragment/12/position = Vector2(-200, -400)
nodes/fragment/13/node = SubResource("VisualShaderNodeMix_he5yq")
nodes/fragment/13/position = Vector2(108.948, 81.5869)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_l2mr6")
nodes/fragment/14/position = Vector2(-1120, 800)
nodes/fragment/14/size = Vector2(724.789, 654.559)
nodes/fragment/14/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/14/output_ports = "0,0,Dither_Node;"
nodes/fragment/14/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatParameter_yh7tq")
nodes/fragment/15/position = Vector2(-1780, 1120)
nodes/fragment/connections = PackedInt32Array(7, 0, 8, 0, 6, 0, 5, 0, 8, 0, 5, 2, 5, 0, 4, 0, 9, 0, 4, 2, 10, 0, 5, 1, 11, 0, 12, 2, 12, 0, 0, 0, 12, 4, 13, 2, 13, 0, 0, 1, 15, 0, 14, 1, 3, 0, 14, 0, 4, 0, 2, 0, 3, 0, 2, 1, 3, 0, 13, 1)
