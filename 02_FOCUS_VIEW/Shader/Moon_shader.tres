[gd_resource type="VisualShader" load_steps=9 format=3 uid="uid://2anxsstngu6f"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_t5mxm"]
constant = 1.0

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_xne3x"]
default_input_values = [2, true, 3, 0.405]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_tl2uv"]
parameter_name = "Color_yellow"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_haa63"]
default_input_values = [0, 0.0, 1, 1.0, 2, 0.8]

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_31rmb"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_k787n"]
function = 31

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_07ry6"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_65p3w"]
parameter_name = "Dither_size"
qualifier = 1

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded, shadows_disabled, ambient_light_disabled;

uniform vec4 Color_yellow : source_color;
global uniform float Dither_size;



void fragment() {
// ColorParameter:13
	vec4 n_out13p0 = Color_yellow;


// Fresnel:12
	float n_in12p3 = 0.40500;
	float n_out12p0 = pow(clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in12p3);


// FloatFunc:7
	float n_out7p0 = 1.0 - n_out12p0;


// FloatConstant:10
	float n_out10p0 = 1.000000;


// FloatParameter:9
	float n_out9p0 = Dither_size;


	float n_out8p0;
// Expression:8
	n_out8p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out9p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out8p0 = n_out10p0 - DITHER_THRESHOLDS[index];
	}


// Step:5
	float n_out5p0 = step(n_out7p0, n_out8p0);


// Mix:14
	float n_in14p2 = 0.80000;
	float n_out14p0 = mix(n_out5p0, n_out12p0, n_in14p2);


// Output:0
	ALBEDO = vec3(n_out13p0.xyz);
	ALPHA = n_out14p0;


}
"
flags/unshaded = true
flags/shadows_disabled = true
flags/ambient_light_disabled = true
nodes/fragment/0/position = Vector2(720, 200)
nodes/fragment/5/node = SubResource("VisualShaderNodeStep_31rmb")
nodes/fragment/5/position = Vector2(40, 520)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatFunc_k787n")
nodes/fragment/7/position = Vector2(-240, 480)
nodes/fragment/8/node = SubResource("VisualShaderNodeExpression_07ry6")
nodes/fragment/8/position = Vector2(-1700, 280)
nodes/fragment/8/size = Vector2(724.789, 654.559)
nodes/fragment/8/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/8/output_ports = "0,0,Dither_Node;"
nodes/fragment/8/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatParameter_65p3w")
nodes/fragment/9/position = Vector2(-2080, 640)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatConstant_t5mxm")
nodes/fragment/10/position = Vector2(-2020, 420)
nodes/fragment/12/node = SubResource("VisualShaderNodeFresnel_xne3x")
nodes/fragment/12/position = Vector2(-460, 40)
nodes/fragment/13/node = SubResource("VisualShaderNodeColorParameter_tl2uv")
nodes/fragment/13/position = Vector2(540, -240)
nodes/fragment/14/node = SubResource("VisualShaderNodeMix_haa63")
nodes/fragment/14/position = Vector2(360, 620)
nodes/fragment/connections = PackedInt32Array(9, 0, 8, 1, 10, 0, 8, 0, 8, 0, 5, 1, 12, 0, 7, 0, 13, 0, 0, 0, 12, 0, 14, 1, 14, 0, 0, 1, 5, 0, 14, 0, 7, 0, 5, 0)
