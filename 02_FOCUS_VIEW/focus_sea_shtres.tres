[gd_resource type="VisualShader" load_steps=27 format=3 uid="uid://d1nnr5y8dggc7"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_kiiqt"]
default_input_values = [0, 0.0, 1, -0.001]
operator = 2

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_h80uo"]
function = 1

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ajusy"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeProximityFade" id="VisualShaderNodeProximityFade_pw4sl"]
default_input_values = [0, 2.57]

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_3j1nr"]
default_input_values = [0, -0.13, 1, 1.17, 2, 0.5]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_tai0d"]
parameter_name = "Water_lighter_color"
default_value = Color(0, 0.484217, 0.505751, 1)

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_m8308"]
default_input_values = [0, 0.0, 1, 0.5]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_sswmi"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_3bbmm"]
size = Vector2(896.815, 525.141)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_rtquy"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_0sqms"]
noise_type = 3
seed = 195
frequency = 0.0254
offset = Vector3(0, 1, 0)
fractal_type = 0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_knhc8"]
height = 256
seamless = true
noise = SubResource("FastNoiseLite_0sqms")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ubt2r"]
output_port_for_preview = 0
texture = SubResource("NoiseTexture2D_knhc8")

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_2ymqp"]
default_input_values = [0, 0.0, 1, 0.2, 2, 1.0]

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_me3ao"]
function = 1

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_5j0no"]

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_iauxt"]
parameter_name = "active_Dither"
qualifier = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_pm517"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_gowha"]
output_port_for_preview = 0
texture = SubResource("NoiseTexture2D_knhc8")

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_7ilos"]
parameter_name = "Sea_color"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_kk5q8"]
function = 31

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_x4rsq"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_1xmya"]
default_input_values = [0, 1.0, 1, 0.0, 2, -1.495]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_8g78d"]
default_input_values = [0, 0.0, 1, 0.001]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_wxdaw"]
constant = 10.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_g0gln"]
input_name = "time"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_disabled, unshaded, shadows_disabled;

uniform vec4 Sea_color : source_color;
uniform vec4 Water_lighter_color : source_color;
global uniform bool active_Dither;
global uniform float Dither_size;
uniform sampler2D tex_frg_33;
uniform sampler2D tex_frg_23;
uniform sampler2D depth_tex_frg_13 : hint_depth_texture;



void fragment() {
// ColorParameter:34
	vec4 n_out34p0 = Sea_color;


// ColorParameter:16
	vec4 n_out16p0 = Water_lighter_color;


// BooleanParameter:31
	bool n_out31p0 = active_Dither;


// FloatConstant:19
	float n_out19p0 = 1.000000;


// FloatParameter:32
	float n_out32p0 = Dither_size;


	float n_out20p0;
// Expression:20
	n_out20p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out32p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out20p0 = n_out19p0 - DITHER_THRESHOLDS[index];
	}


	float n_out30p0;
// Switch:30
	float n_in30p2 = 0.00000;
	n_out30p0 = mix(n_in30p2, n_out20p0, float(n_out31p0));


// FloatConstant:8
	float n_out8p0 = 10.000000;


// FloatOp:17
	float n_in17p0 = 0.00000;
	float n_in17p1 = 0.50000;
	float n_out17p0 = n_in17p0 * n_in17p1;


// FloatOp:7
	float n_in7p1 = 0.00100;
	float n_out7p0 = n_out17p0 * n_in7p1;


// UVFunc:3
	vec2 n_out3p0 = (UV - vec2(n_out7p0)) * vec2(n_out8p0) + vec2(n_out7p0);


// Texture2D:33
	vec4 n_out33p0 = texture(tex_frg_33, n_out3p0);


// FloatOp:10
	float n_in10p1 = -0.00100;
	float n_out10p0 = n_out17p0 * n_in10p1;


// UVFunc:11
	vec2 n_out11p0 = (UV - vec2(n_out10p0)) * vec2(n_out8p0) + vec2(n_out10p0);


// Texture2D:23
	vec4 n_out23p0 = texture(tex_frg_23, n_out11p0);


// VectorOp:12
	vec4 n_out12p0 = n_out33p0 * n_out23p0;


	float n_out13p0;
// ProximityFade:13
	float n_in13p0 = 2.57000;
	{
		float __depth_tex = texture(depth_tex_frg_13, SCREEN_UV).r;
		vec4 __depth_world_pos = INV_PROJECTION_MATRIX * vec4(SCREEN_UV * 2.0 - 1.0, __depth_tex, 1.0);
		__depth_world_pos.xyz /= __depth_world_pos.w;
		n_out13p0 = clamp(1.0 - smoothstep(__depth_world_pos.z + n_in13p0, __depth_world_pos.z, VERTEX.z), 0.0, 1.0);
	}


// SmoothStep:14
	float n_in14p0 = -0.13000;
	float n_out14p0 = smoothstep(n_in14p0, n_out12p0.x, n_out13p0);


// Mix:24
	float n_in24p1 = 0.20000;
	float n_out24p0 = mix(n_out14p0, n_in24p1, n_out12p0.x);


// Mix:6
	float n_in6p1 = 0.00000;
	float n_in6p2 = -1.49500;
	float n_out6p0 = mix(n_out24p0, n_in6p1, n_in6p2);


// FloatFunc:4
	float n_out4p0 = 1.0 - n_out6p0;


// Step:21
	float n_out21p0 = step(n_out30p0, n_out4p0);


// Mix:5
	vec3 n_out5p0 = mix(vec3(n_out34p0.xyz), vec3(n_out16p0.xyz), vec3(n_out21p0));


// Output:0
	ALBEDO = n_out5p0;


}
"
graph_offset = Vector2(-1399.24, 985.857)
modes/specular = 2
flags/unshaded = true
flags/shadows_disabled = true
nodes/fragment/0/position = Vector2(1620, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeUVFunc_me3ao")
nodes/fragment/3/position = Vector2(-2640, 320)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatFunc_kk5q8")
nodes/fragment/4/position = Vector2(-528.127, 572.948)
nodes/fragment/5/node = SubResource("VisualShaderNodeMix_x4rsq")
nodes/fragment/5/position = Vector2(-168.127, 112.948)
nodes/fragment/6/node = SubResource("VisualShaderNodeMix_1xmya")
nodes/fragment/6/position = Vector2(-708.127, 812.948)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatOp_8g78d")
nodes/fragment/7/position = Vector2(-2788.13, 632.948)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatConstant_wxdaw")
nodes/fragment/8/position = Vector2(-3168.13, 692.948)
nodes/fragment/9/node = SubResource("VisualShaderNodeInput_g0gln")
nodes/fragment/9/position = Vector2(-3568.13, 812.948)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatOp_kiiqt")
nodes/fragment/10/position = Vector2(-2900, 1020)
nodes/fragment/11/node = SubResource("VisualShaderNodeUVFunc_h80uo")
nodes/fragment/11/position = Vector2(-2488.13, 852.948)
nodes/fragment/12/node = SubResource("VisualShaderNodeVectorOp_ajusy")
nodes/fragment/12/position = Vector2(-1868.13, 792.948)
nodes/fragment/13/node = SubResource("VisualShaderNodeProximityFade_pw4sl")
nodes/fragment/13/position = Vector2(-1360, 880)
nodes/fragment/14/node = SubResource("VisualShaderNodeSmoothStep_3j1nr")
nodes/fragment/14/position = Vector2(-1288.13, 552.948)
nodes/fragment/16/node = SubResource("VisualShaderNodeColorParameter_tai0d")
nodes/fragment/16/position = Vector2(-1160, -120)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatOp_m8308")
nodes/fragment/17/position = Vector2(-3148.13, 872.948)
nodes/fragment/19/node = SubResource("VisualShaderNodeFloatConstant_sswmi")
nodes/fragment/19/position = Vector2(-768.127, 1312.95)
nodes/fragment/20/node = SubResource("VisualShaderNodeExpression_3bbmm")
nodes/fragment/20/position = Vector2(-408.127, 1372.95)
nodes/fragment/20/size = Vector2(896.815, 525.141)
nodes/fragment/20/input_ports = "0,4,noise;1,0,In;2,0,Size;"
nodes/fragment/20/output_ports = "0,0,Dither_Node;"
nodes/fragment/20/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/21/node = SubResource("VisualShaderNodeStep_rtquy")
nodes/fragment/21/position = Vector2(-300, 600)
nodes/fragment/23/node = SubResource("VisualShaderNodeTexture_ubt2r")
nodes/fragment/23/position = Vector2(-2140, 980)
nodes/fragment/24/node = SubResource("VisualShaderNodeMix_2ymqp")
nodes/fragment/24/position = Vector2(-990.297, 947.132)
nodes/fragment/30/node = SubResource("VisualShaderNodeSwitch_5j0no")
nodes/fragment/30/position = Vector2(-380, 1040)
nodes/fragment/31/node = SubResource("VisualShaderNodeBooleanParameter_iauxt")
nodes/fragment/31/position = Vector2(-880, 1100)
nodes/fragment/32/node = SubResource("VisualShaderNodeFloatParameter_pm517")
nodes/fragment/32/position = Vector2(-940, 1640)
nodes/fragment/33/node = SubResource("VisualShaderNodeTexture_gowha")
nodes/fragment/33/position = Vector2(-2240, 180)
nodes/fragment/34/node = SubResource("VisualShaderNodeColorParameter_7ilos")
nodes/fragment/34/position = Vector2(-440, -80)
nodes/fragment/connections = PackedInt32Array(8, 0, 11, 1, 8, 0, 3, 1, 17, 0, 10, 0, 17, 0, 7, 0, 19, 0, 20, 1, 4, 0, 21, 1, 23, 0, 12, 1, 12, 0, 14, 1, 14, 0, 24, 0, 12, 0, 24, 2, 13, 0, 14, 2, 24, 0, 6, 0, 6, 0, 4, 0, 16, 0, 5, 1, 31, 0, 30, 0, 20, 0, 30, 1, 32, 0, 20, 2, 30, 0, 21, 0, 21, 0, 5, 2, 33, 0, 12, 0, 5, 0, 0, 0, 34, 0, 5, 0, 3, 0, 33, 0, 11, 0, 23, 0, 10, 0, 11, 2, 7, 0, 3, 2)
nodes/light/0/position = Vector2(600, 260)
