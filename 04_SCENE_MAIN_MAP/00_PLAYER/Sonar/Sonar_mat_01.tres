[gd_resource type="ShaderMaterial" load_steps=12 format=3 uid="uid://drthywu137fhb"]

[sub_resource type="VisualShaderNodeProximityFade" id="VisualShaderNodeProximityFade_dnk0e"]
default_input_values = [0, 1.5]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_hh02i"]
function = 31

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_5t4il"]
parameter_name = "Sonar_color"
default_value_enabled = true

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_upo43"]
size = Vector2(800, 560)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_cgibr"]
constant = 0.4

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_txsxr"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_p0sdf"]
parameter_name = "Opacity"
hint = 1
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_wpkrw"]
constant = 1.104

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_br6ox"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_r7y3n"]

[sub_resource type="VisualShader" id="VisualShader_f73p6"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_front, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform vec4 Sonar_color : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform sampler2D depth_tex_frg_37 : hint_depth_texture;
uniform float Opacity : hint_range(0, 1) = 1;



void fragment() {
// ColorParameter:44
	vec4 n_out44p0 = Sonar_color;


// FloatConstant:51
	float n_out51p0 = 1.104000;


// FloatConstant:46
	float n_out46p0 = 0.400000;


	float n_out45p0;
// Expression:45
	n_out45p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out46p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out45p0 = n_out51p0 - DITHER_THRESHOLDS[index];
	}


	float n_out37p0;
// ProximityFade:37
	float n_in37p0 = 1.50000;
	{
		float __depth_tex = texture(depth_tex_frg_37, SCREEN_UV).r;
		vec4 __depth_world_pos = INV_PROJECTION_MATRIX * vec4(SCREEN_UV * 2.0 - 1.0, __depth_tex, 1.0);
		__depth_world_pos.xyz /= __depth_world_pos.w;
		n_out37p0 = clamp(1.0 - smoothstep(__depth_world_pos.z + n_in37p0, __depth_world_pos.z, VERTEX.z), 0.0, 1.0);
	}


// FloatFunc:43
	float n_out43p0 = 1.0 - n_out37p0;


// FloatParameter:49
	float n_out49p0 = Opacity;


// Mix:53
	float n_in53p0 = 0.00000;
	float n_out53p0 = mix(n_in53p0, n_out43p0, n_out49p0);


// Step:48
	float n_out48p0 = step(n_out45p0, n_out53p0);


// Output:0
	ALBEDO = vec3(n_out44p0.xyz);
	ALPHA = n_out48p0;


}
"
modes/cull = 1
flags/unshaded = true
nodes/fragment/0/position = Vector2(1060, 200)
nodes/fragment/37/node = SubResource("VisualShaderNodeProximityFade_dnk0e")
nodes/fragment/37/position = Vector2(0, 80)
nodes/fragment/43/node = SubResource("VisualShaderNodeFloatFunc_hh02i")
nodes/fragment/43/position = Vector2(280, 60)
nodes/fragment/44/node = SubResource("VisualShaderNodeColorParameter_5t4il")
nodes/fragment/44/position = Vector2(120, -260)
nodes/fragment/45/node = SubResource("VisualShaderNodeExpression_upo43")
nodes/fragment/45/position = Vector2(-720, 620)
nodes/fragment/45/size = Vector2(800, 560)
nodes/fragment/45/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/45/output_ports = "0,0,Dither_Node;"
nodes/fragment/45/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/46/node = SubResource("VisualShaderNodeFloatConstant_cgibr")
nodes/fragment/46/position = Vector2(-980, 740)
nodes/fragment/48/node = SubResource("VisualShaderNodeStep_txsxr")
nodes/fragment/48/position = Vector2(760, 300)
nodes/fragment/49/node = SubResource("VisualShaderNodeFloatParameter_p0sdf")
nodes/fragment/49/position = Vector2(20, 260)
nodes/fragment/51/node = SubResource("VisualShaderNodeFloatConstant_wpkrw")
nodes/fragment/51/position = Vector2(-960, 640)
nodes/fragment/52/node = SubResource("VisualShaderNodeMix_br6ox")
nodes/fragment/52/position = Vector2(560, 500)
nodes/fragment/53/node = SubResource("VisualShaderNodeMix_r7y3n")
nodes/fragment/53/position = Vector2(379.092, 231.189)
nodes/fragment/connections = PackedInt32Array(37, 0, 43, 0, 44, 0, 0, 0, 48, 0, 0, 1, 46, 0, 45, 1, 51, 0, 45, 0, 45, 0, 52, 1, 45, 0, 48, 0, 43, 0, 53, 1, 49, 0, 53, 2, 53, 0, 48, 1)

[resource]
render_priority = 1
shader = SubResource("VisualShader_f73p6")
shader_parameter/Sonar_color = Color(0.333333, 0.643137, 0.54902, 1)
shader_parameter/Opacity = 1.0
