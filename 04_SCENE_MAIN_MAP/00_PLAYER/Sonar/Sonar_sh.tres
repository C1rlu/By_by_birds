[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://bduoqim3kfbs6"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_w4x7r"]

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_5py8l"]

[sub_resource type="VisualShaderNodeProximityFade" id="VisualShaderNodeProximityFade_ct8fr"]
default_input_values = [0, 1.5]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_w3g0e"]
function = 31

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_14myb"]
parameter_name = "Sonar_color"
default_value_enabled = true

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_0h3xi"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ba36p"]
constant = 1.104

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_kdwk2"]
size = Vector2(800, 560)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_l5xq8"]
parameter_name = "Opacity"
hint = 1
default_value_enabled = true
default_value = 1.0

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_never, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform vec4 Sonar_color : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform sampler2D depth_tex_frg_2 : hint_depth_texture;
uniform float Opacity : hint_range(0, 1) = 1;



void fragment() {
// ColorParameter:4
	vec4 n_out4p0 = Sonar_color;


// FloatConstant:6
	float n_out6p0 = 1.104000;


// FloatConstant:5
	float n_out5p0 = 0.400000;


	float n_out7p0;
// Expression:7
	n_out7p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out5p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out7p0 = n_out6p0 - DITHER_THRESHOLDS[index];
	}


	float n_out2p0;
// ProximityFade:2
	float n_in2p0 = 1.50000;
	{
		float __depth_tex = texture(depth_tex_frg_2, SCREEN_UV).r;
		vec4 __depth_world_pos = INV_PROJECTION_MATRIX * vec4(SCREEN_UV * 2.0 - 1.0, __depth_tex, 1.0);
		__depth_world_pos.xyz /= __depth_world_pos.w;
		n_out2p0 = clamp(1.0 - smoothstep(__depth_world_pos.z + n_in2p0, __depth_world_pos.z, VERTEX.z), 0.0, 1.0);
	}


// FloatFunc:3
	float n_out3p0 = 1.0 - n_out2p0;


// FloatParameter:9
	float n_out9p0 = Opacity;


// Mix:10
	float n_in10p0 = 0.00000;
	float n_out10p0 = mix(n_in10p0, n_out3p0, n_out9p0);


// Step:11
	float n_out11p0 = step(n_out7p0, n_out10p0);


// Output:0
	ALBEDO = vec3(n_out4p0.xyz);
	ALPHA = n_out11p0;


}
"
modes/depth_draw = 2
flags/unshaded = true
nodes/fragment/0/position = Vector2(1060, 200)
nodes/fragment/2/node = SubResource("VisualShaderNodeProximityFade_ct8fr")
nodes/fragment/2/position = Vector2(-140, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatFunc_w3g0e")
nodes/fragment/3/position = Vector2(140, 120)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorParameter_14myb")
nodes/fragment/4/position = Vector2(-20, -200)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatConstant_0h3xi")
nodes/fragment/5/position = Vector2(-1120, 800)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatConstant_ba36p")
nodes/fragment/6/position = Vector2(-1100, 700)
nodes/fragment/7/node = SubResource("VisualShaderNodeExpression_kdwk2")
nodes/fragment/7/position = Vector2(-860, 680)
nodes/fragment/7/size = Vector2(800, 560)
nodes/fragment/7/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/7/output_ports = "0,0,Dither_Node;"
nodes/fragment/7/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatParameter_l5xq8")
nodes/fragment/9/position = Vector2(-120, 320)
nodes/fragment/10/node = SubResource("VisualShaderNodeMix_w4x7r")
nodes/fragment/10/position = Vector2(240, 300)
nodes/fragment/11/node = SubResource("VisualShaderNodeStep_5py8l")
nodes/fragment/11/position = Vector2(620, 360)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 5, 0, 7, 1, 6, 0, 7, 0, 7, 0, 11, 0, 3, 0, 10, 1, 9, 0, 10, 2, 10, 0, 11, 1, 11, 0, 0, 1, 4, 0, 0, 0)
